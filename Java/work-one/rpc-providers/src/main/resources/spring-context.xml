<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.for2cold.rpc" />
    <context:annotation-config />

    <bean class="com.for2cold.rpc.proxy.ProviderProxyFactory">
        <constructor-arg index="0">
            <map key-type="java.lang.Class" value-type="java.lang.Object">
                <entry key="com.for2cold.rpc.SpeakInterface" value-ref="speakInterface" />
            </map>
        </constructor-arg>
        <constructor-arg index="1">
            <bean id="config" class="com.for2cold.rpc.invoke.ProviderConfig">
                <property name="port" value="8080" />
                <property name="target" value="/invoke"/>
            </bean>
        </constructor-arg>

    </bean>


</beans>